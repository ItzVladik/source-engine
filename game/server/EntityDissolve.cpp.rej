--- game/server/EntityDissolve.cpp	2024-08-11 15:07:30.698942081 +0500
+++ game/server/EntityDissolve.cpp	2018-12-05 16:53:04.041101800 +0500
@@ -15,6 +15,8 @@
 #include "physics_prop_ragdoll.h"
 #include "ai_basenpc.h"
 
+#include "smod_ragdoll.h"
+
 // memdbgon must be the last include file in a .cpp file!!!
 #include "tier0/memdbgon.h"
 
@@ -120,7 +122,7 @@
 
 	if ( (m_nDissolveType == ENTITY_DISSOLVE_ELECTRICAL) || (m_nDissolveType == ENTITY_DISSOLVE_ELECTRICAL_LIGHT) )
 	{
-		if ( dynamic_cast< CRagdollProp* >( GetMoveParent() ) )
+		if ( dynamic_cast< CSMODRagdoll* >( GetMoveParent() ) )
 		{
 			SetContextThink( &CEntityDissolve::ElectrocuteThink, gpGlobals->curtime + 0.01f, s_pElectroThinkContext );
 		}
@@ -226,7 +228,8 @@
 		if ( pTarget->IsNPC() && pTarget->MyNPCPointer()->CanBecomeRagdoll() )
 		{
 			CTakeDamageInfo info;
-			CBaseEntity *pRagdoll = CreateServerRagdoll( pTarget->MyNPCPointer(), 0, info, COLLISION_GROUP_DEBRIS, true );
+			CSMODRagdoll *pRagdoll = (CSMODRagdoll *)( pTarget->MyNPCPointer(), 0, info, COLLISION_GROUP_DEBRIS, true );
+			pRagdoll->SetBloodColor(BLOOD_COLOR_RED);
 			pRagdoll->SetCollisionBounds( pTarget->CollisionProp()->OBBMins(), pTarget->CollisionProp()->OBBMaxs() );
 
 			// Necessary to cause it to do the appropriate death cleanup
@@ -371,7 +374,7 @@
 //-----------------------------------------------------------------------------
 void CEntityDissolve::ElectrocuteThink( void )
 {
-	CRagdollProp *pRagdoll = dynamic_cast< CRagdollProp* >( GetMoveParent() );
+	CSMODRagdoll *pRagdoll = dynamic_cast< CSMODRagdoll* >( GetMoveParent() );
 	if ( !pRagdoll )
 		return;
 
